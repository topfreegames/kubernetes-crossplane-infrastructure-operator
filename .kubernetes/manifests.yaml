apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
    control-plane: controller-manager
  name: kcio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
  name: kcio-controller-manager
  namespace: kcio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
  name: kcio-leader-election-role
  namespace: kcio-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kcio-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - clustermesh.infrastructure.wildlife.io
  resources:
  - clustermeshes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - clustermesh.infrastructure.wildlife.io
  resources:
  - clustermeshes/finalizers
  verbs:
  - update
- apiGroups:
  - clustermesh.infrastructure.wildlife.io
  resources:
  - clustermeshes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kopscontrolplanes
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ec2.aws.crossplane.io
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ec2.aws.crossplane.io
  resources:
  - securitygroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ec2.aws.crossplane.io
  resources:
  - vpcpeeringconnections
  verbs:
  - create
  - delete
  - list
  - watch
- apiGroups:
  - ec2.aws.wildlife.io
  resources:
  - securitygroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ec2.aws.wildlife.io
  resources:
  - securitygroups/finalizers
  verbs:
  - update
- apiGroups:
  - ec2.aws.wildlife.io
  resources:
  - securitygroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - kopsmachinepools
  verbs:
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
  name: kcio-leader-election-rolebinding
  namespace: kcio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kcio-leader-election-role
subjects:
- kind: ServiceAccount
  name: kcio-controller-manager
  namespace: kcio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
  name: kcio-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kcio-manager-role
subjects:
- kind: ServiceAccount
  name: kcio-controller-manager
  namespace: kcio-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: :8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1334ff7b.infrastructure.wildlife.io
kind: ConfigMap
metadata:
  name: kcio-manager-config
  namespace: kcio-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: migration-kubernetes-crossplane-infrastructure-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: migration-kubernetes-crossplane-infrastructure-operator
    control-plane: controller-manager
  name: kcio-controller-manager
  namespace: kcio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        ad.datadoghq.com/manager.check_names: '["openmetrics"]'
        ad.datadoghq.com/manager.init_configs: '[{}]'
        ad.datadoghq.com/manager.instances: |-
          [{
            "metrics": [
              "controller*",
              "workqueue*",
              "custom*"
            ],
            "namespace": "kcio",
            "prometheus_url": "http://%%host%%:8080/metrics",
            "send_monotonic_counter": true,
            "send_distribution_buckets": true
          }]
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        env:
        - name: SPOTINST_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: spotinst-credentials
              optional: true
        - name: SPOTINST_ACCOUNT
          valueFrom:
            secretKeyRef:
              key: account
              name: spotinst-credentials
              optional: true
        image: tfgco/kubernetes-crossplane-infrastructure-operator:v0.8.5-alpha
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      serviceAccountName: kcio-controller-manager
      terminationGracePeriodSeconds: 10
